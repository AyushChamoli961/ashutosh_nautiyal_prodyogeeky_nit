// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum clubs {
  web
  mob
  ui
}
// Define the User model
model User {
  id       String          @id @default(auto()) @map("_id") @db.ObjectId
  userId   String          @unique
  email    String          @unique
  name     String?
  clubName String?
  clubs    UserWithClubs[]
}

// Define the Club model
model Club {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String          @unique
  description   String
  events        Event[]         // Define a relation to the Event model
  president     String?
  vicePresident String?
  secretary     String?
  members       UserWithClubs[]
}

// Define the Event model
model Event {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  date          DateTime
  location      String
  club          Club            @relation(fields: [clubId], references: [id])
  clubId        String          @db.ObjectId // This field establishes the relationship with the Club model
}

// Define the UserWithClubs model
model UserWithClubs {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  user      User?     @relation(fields: [userId], references: [userId])
  club      Club?     @relation(fields: [clubId], references: [id])
  userId    String    @unique
  clubId    String    @db.ObjectId
  createdAt DateTime  @default(now())
}


model Admin {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  email    String @unique
  password String
}